-----------------------------------------------------
-----------------------------------------------------
== Model ==
Include References #0.3 here
-----------------------------------------------------
Note 0.1.0:
the old rule #2 stated that the Model is mapped to the Object Proctype and that the aggregation(?) is preserved because each class is contained within a Promela Model file.
----------------------
Rule mbnh 0.1: from ''mbnhMacroGlobalOutput()''
The following macros are globally defined for use in the code:

"#define min(x,y) (x<y->x:y)"
"#define max(x,y) (x>y->x:y)"

Rule mbnh 0.2: from ''mbnhNeverDefinitionOutput()''
The following DEFINES are globally defined for use in the code:

	tmpinfo.getStrSplit("DEFINES");

References #0.3 <Inclusion List>
-Rule mbnh 0.1
-Rule mbnh 0.2
-Rule Promela 1
-----------------------------------------------------
Rule Promela 1
Every model mapped from UML to Promela contains the following channel definitions and the dispatching ''proctype'', called ''event()'', to handle intra-object transitions:

Rule mbnh 1.1: from ''mbnhChanGlobalOutput()''

<other lines now omitted>
"chan wait=[10] of {int,mtype};"

	Insert rules: See Reference #1.2 (Body of model goes here).

<universal event dispatcher ommitted>

References #1.2 <inclusion list>
-Rule Promela 1.3
-Rule Promela 1.4
-Rule Promela 1.6
-Rule Promela 1.7 (*)
-Rule Promela 1.9
-----------------------------------------------------
Rule Promela 1.3: from ''mtypeListOutput()''
The mtypeList is included after it has been created as such (where tmpout1 contains the mTypeList):

"mtype={"
"        " + (String)tmpout1.get(i);
"};"
-----------------------------------------------------
Rule Promela 1.4: from ''mbnhInstVarSignalOutput()''
The varSignalOutput is included after it has been created as such:

tmpStr += mbnhPut(0, entries[i]); // See Reference #1.5

References #1.5 (prints from "InstVarSignal")
-----------------------------------------------------
Rule Promela 1.6: from ''mbnhDriverFile()''
Include a specified driver file verbatim:
""
"/* User specified driver file */"
<Driver File Text>
""
-----------------------------------------------------
Rule Promela 1.7: from ''mbnhWholeClassOutput()''
Include the entire class output (likely tied to Rule Promela 2):

tmpStr += mbnhPut(0, entries[i]); // See Reference #1.8

References #1.8 (prints from "Class")
-----------------------------------------------------
Rule Promela 1.9: from ''mbnhDispatcherOutput()''
Rule Promela 1.9a: from ''mbnhTimerProcessOutput()''
<currently disputed>
-----------------------------------------------------
Rule Promela 1.10: from ''mbnhNeverClaim()''
The following NEVER Claims are globally defined for use in the code:

	tmpinfo.getStrSplit("NEVER");
-----------------------------------------------------
End Model Rules (some important parts currently omitted)
-----------------------------------------------------




-----------------------------------------------------
-----------------------------------------------------
== Class ==
Include References #2.2 here
-----------------------------------------------------
Note 2.1.0: the old Rule 3 states (rather vaguely): Class specialization is formalized as a duplication of the parent class components, followed by modification, if required. It says that this rule is derived directly from the depiction of the metamodels, and that the type relationship with "Relationships" is preserved. (!?)
----------------------
Note 2.1.1: the old Rule 4 states (also rather vaguely): Aggregation is formalized as an instantiation of the "part" class as many times as required or specified.  The aggregate objects and part of objects communicate with messages. The "Relationships" are also preserved. (!?)
----------------------
Rule Promela 2.1

References #2.2
-----------------------------------------------------




-----------------------------------------------------
-----------------------------------------------------
== Instance Variables ==
Include References #2.2 here
-----------------------------------------------------
